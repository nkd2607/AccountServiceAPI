
services:
  hangfiredb:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: hangfiredb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - hangfire_data:/var/lib/postgresql/data
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: accountdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/accountdb
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    volumes:
      - ./keycloak-config:/opt/keycloak/data/import
    command: start-dev --import-realm
    depends_on:
      postgres:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  api:
    build: 
      context: ./src
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=accountdb;Username=postgres;Password=postgres
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy

volumes:
  postgres_data: